cmake_minimum_required(VERSION 3.8)
project(sofar)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake REQUIRED)
find_package(rclcpp REQUIRED)
find_package(std_msgs REQUIRED)
find_package(geometry_msgs REQUIRED)
find_package(nav_msgs REQUIRED)
find_package(rosidl_default_generators REQUIRED)
find_package(sofar REQUIRED)
find_package(sensor_msgs REQUIRED)

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # comment the line when a copyright and license is added to all source files
  set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # comment the line when this package is in a git repo and when
  # a copyright and license is added to all source files
  set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

add_executable(simple_publisher_node src/simple_topic_publisher.cpp)
ament_target_dependencies(simple_publisher_node rclcpp std_msgs)

add_executable(simple_publisher_composable_node src/simple_topic_publisher_composable.cpp)
ament_target_dependencies(simple_publisher_composable_node rclcpp std_msgs)

add_executable(move_robot_node src/move_robot.cpp)
ament_target_dependencies(move_robot_node rclcpp std_msgs geometry_msgs)

add_executable(simple_subscriber_node src/simple_subscriber.cpp)
ament_target_dependencies(simple_subscriber_node rclcpp std_msgs geometry_msgs)

add_executable(sub_odom_node src/sub_odom.cpp)
ament_target_dependencies(sub_odom_node rclcpp nav_msgs)

add_executable(age_publisher_node src/publish_age.cpp)
ament_target_dependencies(age_publisher_node rclcpp std_msgs sofar)

add_executable(topic_quiz_node src/topic_quiz.cpp)
ament_target_dependencies(topic_quiz_node rclcpp geometry_msgs sensor_msgs)

install(TARGETS
   simple_publisher_node
   simple_publisher_composable_node
   move_robot_node
   simple_subscriber_node
   sub_odom_node
   age_publisher_node
   topic_quiz_node
   DESTINATION lib/${PROJECT_NAME}
)

# Install launch files.
install(DIRECTORY
  launch
  DESTINATION share/${PROJECT_NAME}/
)

rosidl_generate_interfaces(${PROJECT_NAME}
  "msg/Age.msg"
)

ament_package()
